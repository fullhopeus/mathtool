program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "4.28.3"}, {"coremlc-version", "1436.100.10"}})]
{
    func main<ios15>(tensor<fp32, [1, 1, 16224, 1]> input_1) {
            tensor<int32, [2]> model_tf_reshape_1_Reshape_shape = const()[name = tensor<string, []>("model_tf_reshape_1_Reshape_shape"), val = tensor<int32, [2]>([-1, 360])];
            tensor<int32, [4]> transpose_1_perm_0 = const()[name = tensor<string, []>("transpose_1_perm_0"), val = tensor<int32, [4]>([0, 3, 1, 2])];
            tensor<string, []> input_1_to_fp16_dtype_0 = const()[name = tensor<string, []>("input_1_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> model_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("model_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> model_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("model_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> model_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("model_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> model_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("model_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> model_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("model_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 1, 1, 64]> transpose_0_to_fp16 = const()[name = tensor<string, []>("transpose_0_to_fp16"), val = tensor<fp16, [128, 1, 1, 64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [128]> const_5_to_fp16 = const()[name = tensor<string, []>("const_5_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16512)))];
            tensor<fp16, [1, 1, 16224, 1]> cast_23 = cast(dtype = input_1_to_fp16_dtype_0, x = input_1);
            tensor<fp16, [1, 1, 1, 16224]> transpose_21 = transpose(perm = transpose_1_perm_0, x = cast_23);
            tensor<fp16, [1, 128, 1, 16161]> model_conv2d_BiasAdd_cast = conv(bias = const_5_to_fp16, dilations = model_conv2d_Conv2Dx_dilations_0, groups = model_conv2d_Conv2Dx_groups_0, pad = model_conv2d_Conv2Dx_pad_0, pad_type = model_conv2d_Conv2Dx_pad_type_0, strides = model_conv2d_Conv2Dx_strides_0, weight = transpose_0_to_fp16, x = transpose_21);
            tensor<fp16, [1, 128, 1, 16161]> model_conv2d_Relu_cast = relu(x = model_conv2d_BiasAdd_cast);
            tensor<int32, [2]> max_pool_0_kernel_sizes_0 = const()[name = tensor<string, []>("max_pool_0_kernel_sizes_0"), val = tensor<int32, [2]>([1, 2])];
            tensor<int32, [2]> max_pool_0_strides_0 = const()[name = tensor<string, []>("max_pool_0_strides_0"), val = tensor<int32, [2]>([1, 2])];
            tensor<string, []> max_pool_0_pad_type_0 = const()[name = tensor<string, []>("max_pool_0_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [4]> max_pool_0_pad_0 = const()[name = tensor<string, []>("max_pool_0_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<bool, []> max_pool_0_ceil_mode_0 = const()[name = tensor<string, []>("max_pool_0_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 1, 8080]> max_pool_0_cast = max_pool(ceil_mode = max_pool_0_ceil_mode_0, kernel_sizes = max_pool_0_kernel_sizes_0, pad = max_pool_0_pad_0, pad_type = max_pool_0_pad_type_0, strides = max_pool_0_strides_0, x = model_conv2d_Relu_cast);
            tensor<fp16, [128]> model_batch_normalization_FusedBatchNormV3_ReadVariableOp_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_FusedBatchNormV3_ReadVariableOp_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16832)))];
            tensor<fp16, [128]> model_batch_normalization_FusedBatchNormV3_ReadVariableOp_1_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_FusedBatchNormV3_ReadVariableOp_1_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17152)))];
            tensor<fp16, [128]> model_batch_normalization_ReadVariableOp_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_ReadVariableOp_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17472)))];
            tensor<fp16, [128]> model_batch_normalization_ReadVariableOp_1_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_ReadVariableOp_1_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17792)))];
            tensor<fp16, []> model_batch_normalization_FusedBatchNormV3_nchw_epsilon_0_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_FusedBatchNormV3_nchw_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.064p-10)];
            tensor<fp16, [1, 128, 1, 8080]> model_batch_normalization_FusedBatchNormV3_nchw_cast = batch_norm(beta = model_batch_normalization_ReadVariableOp_1_to_fp16, epsilon = model_batch_normalization_FusedBatchNormV3_nchw_epsilon_0_to_fp16, gamma = model_batch_normalization_ReadVariableOp_to_fp16, mean = model_batch_normalization_FusedBatchNormV3_ReadVariableOp_to_fp16, variance = model_batch_normalization_FusedBatchNormV3_ReadVariableOp_1_to_fp16, x = max_pool_0_cast);
            tensor<string, []> model_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("model_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> model_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("model_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> model_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("model_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> model_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("model_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> model_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("model_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [16, 128, 1, 128]> transpose_4_to_fp16 = const()[name = tensor<string, []>("transpose_4_to_fp16"), val = tensor<fp16, [16, 128, 1, 128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18112)))];
            tensor<fp16, [16]> const_6_to_fp16 = const()[name = tensor<string, []>("const_6_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(542464)))];
            tensor<fp16, [1, 16, 1, 7953]> model_conv2d_1_BiasAdd_cast = conv(bias = const_6_to_fp16, dilations = model_conv2d_1_Conv2Dx_dilations_0, groups = model_conv2d_1_Conv2Dx_groups_0, pad = model_conv2d_1_Conv2Dx_pad_0, pad_type = model_conv2d_1_Conv2Dx_pad_type_0, strides = model_conv2d_1_Conv2Dx_strides_0, weight = transpose_4_to_fp16, x = model_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<fp16, [1, 16, 1, 7953]> model_conv2d_1_Relu_cast = relu(x = model_conv2d_1_BiasAdd_cast);
            tensor<int32, [2]> max_pool_1_kernel_sizes_0 = const()[name = tensor<string, []>("max_pool_1_kernel_sizes_0"), val = tensor<int32, [2]>([1, 2])];
            tensor<int32, [2]> max_pool_1_strides_0 = const()[name = tensor<string, []>("max_pool_1_strides_0"), val = tensor<int32, [2]>([1, 2])];
            tensor<string, []> max_pool_1_pad_type_0 = const()[name = tensor<string, []>("max_pool_1_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [4]> max_pool_1_pad_0 = const()[name = tensor<string, []>("max_pool_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<bool, []> max_pool_1_ceil_mode_0 = const()[name = tensor<string, []>("max_pool_1_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 16, 1, 3976]> max_pool_1_cast = max_pool(ceil_mode = max_pool_1_ceil_mode_0, kernel_sizes = max_pool_1_kernel_sizes_0, pad = max_pool_1_pad_0, pad_type = max_pool_1_pad_type_0, strides = max_pool_1_strides_0, x = model_conv2d_1_Relu_cast);
            tensor<fp16, [16]> model_batch_normalization_1_FusedBatchNormV3_ReadVariableOp_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_1_FusedBatchNormV3_ReadVariableOp_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(542592)))];
            tensor<fp16, [16]> model_batch_normalization_1_FusedBatchNormV3_ReadVariableOp_1_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_1_FusedBatchNormV3_ReadVariableOp_1_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(542720)))];
            tensor<fp16, [16]> model_batch_normalization_1_ReadVariableOp_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_1_ReadVariableOp_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(542848)))];
            tensor<fp16, [16]> model_batch_normalization_1_ReadVariableOp_1_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_1_ReadVariableOp_1_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(542976)))];
            tensor<fp16, []> model_batch_normalization_1_FusedBatchNormV3_nchw_epsilon_0_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_1_FusedBatchNormV3_nchw_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.064p-10)];
            tensor<fp16, [1, 16, 1, 3976]> model_batch_normalization_1_FusedBatchNormV3_nchw_cast = batch_norm(beta = model_batch_normalization_1_ReadVariableOp_1_to_fp16, epsilon = model_batch_normalization_1_FusedBatchNormV3_nchw_epsilon_0_to_fp16, gamma = model_batch_normalization_1_ReadVariableOp_to_fp16, mean = model_batch_normalization_1_FusedBatchNormV3_ReadVariableOp_to_fp16, variance = model_batch_normalization_1_FusedBatchNormV3_ReadVariableOp_1_to_fp16, x = max_pool_1_cast);
            tensor<string, []> model_conv2d_2_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("model_conv2d_2_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> model_conv2d_2_Conv2Dx_strides_0 = const()[name = tensor<string, []>("model_conv2d_2_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> model_conv2d_2_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("model_conv2d_2_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> model_conv2d_2_Conv2Dx_groups_0 = const()[name = tensor<string, []>("model_conv2d_2_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> model_conv2d_2_Conv2Dx_pad_0 = const()[name = tensor<string, []>("model_conv2d_2_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 16, 1, 63]> transpose_8_to_fp16 = const()[name = tensor<string, []>("transpose_8_to_fp16"), val = tensor<fp16, [32, 16, 1, 63]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(543104)))];
            tensor<fp16, [32]> const_7_to_fp16 = const()[name = tensor<string, []>("const_7_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(607680)))];
            tensor<fp16, [1, 32, 1, 3914]> model_conv2d_2_BiasAdd_cast = conv(bias = const_7_to_fp16, dilations = model_conv2d_2_Conv2Dx_dilations_0, groups = model_conv2d_2_Conv2Dx_groups_0, pad = model_conv2d_2_Conv2Dx_pad_0, pad_type = model_conv2d_2_Conv2Dx_pad_type_0, strides = model_conv2d_2_Conv2Dx_strides_0, weight = transpose_8_to_fp16, x = model_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<fp16, [1, 32, 1, 3914]> model_conv2d_2_Relu_cast = relu(x = model_conv2d_2_BiasAdd_cast);
            tensor<int32, [2]> max_pool_2_kernel_sizes_0 = const()[name = tensor<string, []>("max_pool_2_kernel_sizes_0"), val = tensor<int32, [2]>([1, 2])];
            tensor<int32, [2]> max_pool_2_strides_0 = const()[name = tensor<string, []>("max_pool_2_strides_0"), val = tensor<int32, [2]>([1, 2])];
            tensor<string, []> max_pool_2_pad_type_0 = const()[name = tensor<string, []>("max_pool_2_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [4]> max_pool_2_pad_0 = const()[name = tensor<string, []>("max_pool_2_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<bool, []> max_pool_2_ceil_mode_0 = const()[name = tensor<string, []>("max_pool_2_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 32, 1, 1957]> max_pool_2_cast = max_pool(ceil_mode = max_pool_2_ceil_mode_0, kernel_sizes = max_pool_2_kernel_sizes_0, pad = max_pool_2_pad_0, pad_type = max_pool_2_pad_type_0, strides = max_pool_2_strides_0, x = model_conv2d_2_Relu_cast);
            tensor<fp16, [32]> model_batch_normalization_2_FusedBatchNormV3_ReadVariableOp_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_2_FusedBatchNormV3_ReadVariableOp_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(607808)))];
            tensor<fp16, [32]> model_batch_normalization_2_FusedBatchNormV3_ReadVariableOp_1_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_2_FusedBatchNormV3_ReadVariableOp_1_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(607936)))];
            tensor<fp16, [32]> model_batch_normalization_2_ReadVariableOp_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_2_ReadVariableOp_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(608064)))];
            tensor<fp16, [32]> model_batch_normalization_2_ReadVariableOp_1_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_2_ReadVariableOp_1_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(608192)))];
            tensor<fp16, []> model_batch_normalization_2_FusedBatchNormV3_nchw_epsilon_0_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_2_FusedBatchNormV3_nchw_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.064p-10)];
            tensor<fp16, [1, 32, 1, 1957]> model_batch_normalization_2_FusedBatchNormV3_nchw_cast = batch_norm(beta = model_batch_normalization_2_ReadVariableOp_1_to_fp16, epsilon = model_batch_normalization_2_FusedBatchNormV3_nchw_epsilon_0_to_fp16, gamma = model_batch_normalization_2_ReadVariableOp_to_fp16, mean = model_batch_normalization_2_FusedBatchNormV3_ReadVariableOp_to_fp16, variance = model_batch_normalization_2_FusedBatchNormV3_ReadVariableOp_1_to_fp16, x = max_pool_2_cast);
            tensor<string, []> model_conv2d_3_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("model_conv2d_3_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> model_conv2d_3_Conv2Dx_strides_0 = const()[name = tensor<string, []>("model_conv2d_3_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> model_conv2d_3_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("model_conv2d_3_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> model_conv2d_3_Conv2Dx_groups_0 = const()[name = tensor<string, []>("model_conv2d_3_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> model_conv2d_3_Conv2Dx_pad_0 = const()[name = tensor<string, []>("model_conv2d_3_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 32, 1, 32]> transpose_12_to_fp16 = const()[name = tensor<string, []>("transpose_12_to_fp16"), val = tensor<fp16, [128, 32, 1, 32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(608320)))];
            tensor<fp16, [128]> const_8_to_fp16 = const()[name = tensor<string, []>("const_8_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(870528)))];
            tensor<fp16, [1, 128, 1, 1926]> model_conv2d_3_BiasAdd_cast = conv(bias = const_8_to_fp16, dilations = model_conv2d_3_Conv2Dx_dilations_0, groups = model_conv2d_3_Conv2Dx_groups_0, pad = model_conv2d_3_Conv2Dx_pad_0, pad_type = model_conv2d_3_Conv2Dx_pad_type_0, strides = model_conv2d_3_Conv2Dx_strides_0, weight = transpose_12_to_fp16, x = model_batch_normalization_2_FusedBatchNormV3_nchw_cast);
            tensor<fp16, [1, 128, 1, 1926]> model_conv2d_3_Relu_cast = relu(x = model_conv2d_3_BiasAdd_cast);
            tensor<fp16, [128]> model_batch_normalization_3_FusedBatchNormV3_ReadVariableOp_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_3_FusedBatchNormV3_ReadVariableOp_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(870848)))];
            tensor<fp16, [128]> model_batch_normalization_3_FusedBatchNormV3_ReadVariableOp_1_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_3_FusedBatchNormV3_ReadVariableOp_1_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(871168)))];
            tensor<fp16, [128]> model_batch_normalization_3_ReadVariableOp_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_3_ReadVariableOp_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(871488)))];
            tensor<fp16, [128]> model_batch_normalization_3_ReadVariableOp_1_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_3_ReadVariableOp_1_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(871808)))];
            tensor<fp16, []> model_batch_normalization_3_FusedBatchNormV3_nchw_epsilon_0_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_3_FusedBatchNormV3_nchw_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.064p-10)];
            tensor<fp16, [1, 128, 1, 1926]> model_batch_normalization_3_FusedBatchNormV3_nchw_cast = batch_norm(beta = model_batch_normalization_3_ReadVariableOp_1_to_fp16, epsilon = model_batch_normalization_3_FusedBatchNormV3_nchw_epsilon_0_to_fp16, gamma = model_batch_normalization_3_ReadVariableOp_to_fp16, mean = model_batch_normalization_3_FusedBatchNormV3_ReadVariableOp_to_fp16, variance = model_batch_normalization_3_FusedBatchNormV3_ReadVariableOp_1_to_fp16, x = model_conv2d_3_Relu_cast);
            tensor<string, []> model_conv2d_4_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("model_conv2d_4_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> model_conv2d_4_Conv2Dx_strides_0 = const()[name = tensor<string, []>("model_conv2d_4_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> model_conv2d_4_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("model_conv2d_4_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> model_conv2d_4_Conv2Dx_groups_0 = const()[name = tensor<string, []>("model_conv2d_4_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> model_conv2d_4_Conv2Dx_pad_0 = const()[name = tensor<string, []>("model_conv2d_4_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 128, 1, 18]> transpose_15_to_fp16 = const()[name = tensor<string, []>("transpose_15_to_fp16"), val = tensor<fp16, [256, 128, 1, 18]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(872128)))];
            tensor<fp16, [256]> const_9_to_fp16 = const()[name = tensor<string, []>("const_9_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2051840)))];
            tensor<fp16, [1, 256, 1, 1909]> model_conv2d_4_BiasAdd_cast = conv(bias = const_9_to_fp16, dilations = model_conv2d_4_Conv2Dx_dilations_0, groups = model_conv2d_4_Conv2Dx_groups_0, pad = model_conv2d_4_Conv2Dx_pad_0, pad_type = model_conv2d_4_Conv2Dx_pad_type_0, strides = model_conv2d_4_Conv2Dx_strides_0, weight = transpose_15_to_fp16, x = model_batch_normalization_3_FusedBatchNormV3_nchw_cast);
            tensor<fp16, [1, 256, 1, 1909]> model_conv2d_4_Relu_cast = relu(x = model_conv2d_4_BiasAdd_cast);
            tensor<fp16, [256]> model_batch_normalization_4_FusedBatchNormV3_ReadVariableOp_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_4_FusedBatchNormV3_ReadVariableOp_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2052416)))];
            tensor<fp16, [256]> model_batch_normalization_4_FusedBatchNormV3_ReadVariableOp_1_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_4_FusedBatchNormV3_ReadVariableOp_1_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2052992)))];
            tensor<fp16, [256]> model_batch_normalization_4_ReadVariableOp_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_4_ReadVariableOp_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2053568)))];
            tensor<fp16, [256]> model_batch_normalization_4_ReadVariableOp_1_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_4_ReadVariableOp_1_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2054144)))];
            tensor<fp16, []> model_batch_normalization_4_FusedBatchNormV3_nchw_epsilon_0_to_fp16 = const()[name = tensor<string, []>("model_batch_normalization_4_FusedBatchNormV3_nchw_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.064p-10)];
            tensor<fp16, [1, 256, 1, 1909]> model_batch_normalization_4_FusedBatchNormV3_nchw_cast = batch_norm(beta = model_batch_normalization_4_ReadVariableOp_1_to_fp16, epsilon = model_batch_normalization_4_FusedBatchNormV3_nchw_epsilon_0_to_fp16, gamma = model_batch_normalization_4_ReadVariableOp_to_fp16, mean = model_batch_normalization_4_FusedBatchNormV3_ReadVariableOp_to_fp16, variance = model_batch_normalization_4_FusedBatchNormV3_ReadVariableOp_1_to_fp16, x = model_conv2d_4_Relu_cast);
            tensor<string, []> model_conv2d_5_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("model_conv2d_5_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> model_conv2d_5_Conv2Dx_strides_0 = const()[name = tensor<string, []>("model_conv2d_5_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 20])];
            tensor<int32, [2]> model_conv2d_5_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("model_conv2d_5_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> model_conv2d_5_Conv2Dx_groups_0 = const()[name = tensor<string, []>("model_conv2d_5_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> model_conv2d_5_Conv2Dx_pad_0 = const()[name = tensor<string, []>("model_conv2d_5_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [360, 256, 1, 9]> conv_0_weight_0_to_fp16 = const()[name = tensor<string, []>("conv_0_weight_0_to_fp16"), val = tensor<fp16, [360, 256, 1, 9]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2054720)))];
            tensor<fp16, [360]> conv_0_bias_0_to_fp16 = const()[name = tensor<string, []>("conv_0_bias_0_to_fp16"), val = tensor<fp16, [360]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3713664)))];
            tensor<fp16, [1, 360, 1, 96]> conv_0_cast = conv(bias = conv_0_bias_0_to_fp16, dilations = model_conv2d_5_Conv2Dx_dilations_0, groups = model_conv2d_5_Conv2Dx_groups_0, pad = model_conv2d_5_Conv2Dx_pad_0, pad_type = model_conv2d_5_Conv2Dx_pad_type_0, strides = model_conv2d_5_Conv2Dx_strides_0, weight = conv_0_weight_0_to_fp16, x = model_batch_normalization_4_FusedBatchNormV3_nchw_cast);
            tensor<int32, [4]> model_conv2d_5_Conv2D_perm_0 = const()[name = tensor<string, []>("model_conv2d_5_Conv2D_perm_0"), val = tensor<int32, [4]>([0, 2, 3, 1])];
            tensor<fp16, [1, 1, 96, 360]> transpose_20 = transpose(perm = model_conv2d_5_Conv2D_perm_0, x = conv_0_cast);
            tensor<fp16, [96, 360]> model_tf_reshape_1_Reshape_cast = reshape(shape = model_tf_reshape_1_Reshape_shape, x = transpose_20);
            tensor<fp16, [96, 360]> model_tf_math_sigmoid_1_Sigmoid_cast = sigmoid(x = model_tf_reshape_1_Reshape_cast);
            tensor<string, []> model_tf_math_sigmoid_1_Sigmoid_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("model_tf_math_sigmoid_1_Sigmoid_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [96, 360]> Identity = cast(dtype = model_tf_math_sigmoid_1_Sigmoid_cast_to_fp32_dtype_0, x = model_tf_math_sigmoid_1_Sigmoid_cast);
        } -> (Identity);
}